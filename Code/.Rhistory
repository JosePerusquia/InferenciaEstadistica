y2=quantile(res$residuals,.75)
m=(y2-y1)/(x2-x1)
b=y1-m*x1
quantiles=data.frame(emp_quantiles,teo_quantiles)
names(quantiles)=c('Empirical','Theoretical')
ggplot(quantiles,aes(x=Theoretical,y=Empirical))+
geom_point(col='black',size=2)+
geom_abline(intercept = b ,slope =m,col="red")+
labs(title='',x='Cuantiles Teóricos',y='Cuantiles Empíricos')+
theme_minimal()+
theme(axis.title =element_text(size=8))
# Pruebas de normalidad
lillie.test(res$residuals)
ad.test(res$residuals)
cvm.test(res$residuals)
# Varianza constante
ggplot(data=residuales,aes(x=x,y=y))+
geom_point()+
labs(x='Fitted values',y='Residuals')+
geom_hline(yintercept =0,col='red')+
theme_minimal()
ncvTest(res)
# No correlación
dwtest(res)
# Se ajusta un modelo polinomial de orden 3
res=lm(datosT$yt~poly(datosT$x,3,raw=F),datosT)
summary(res)
x = seq(min(datosT$x),max(datosT$x),by=.1)
y_hat=res$coefficients[1]+res$coefficients[2]*x+
res$coefficients[3]*x^2+res$coefficients[4]*x^3
ajuste=data.frame(x,y_hat)
p+geom_line(data=ajuste,aes(x=x,y=y_hat),col='red')
# TransACC against SCT
p=ggplot(datosT,aes(x=x,y=yt))+
geom_point(col='black',size=1)+
labs(x='x',y='y')+
theme_minimal()
p
# Se ajusta el modelo básico
res=lm(yt~x,datosT)
summary(res)
x = seq(min(datosT$x),max(datosT$x),by=.1)
y_hat=res$coefficients[1]+res$coefficients[2]*x
ajuste=data.frame(x,y_hat)
p+geom_line(data=ajuste,aes(x=x,y=y_hat),col='red')
# Análisis de residuales
residuales = data.frame(x=res$fitted.values,y=res$residuals)
# histograma
ggplot(data=residuales,aes(x=y))+
geom_histogram(breaks=hist(res$residuals,plot=F)$breaks,col='black',
fill='skyblue2')+
labs(x='',y='')+
theme_minimal()
# qqplot
emp_quantiles=quantile(res$residuals,
probs=seq(0.01,.99,length.out = length(res$residuals)))
teo_quantiles=qnorm(seq(.025,.975,length.out = length(res$residuals)))
x1=qnorm(.25)
x2=qnorm(.75)
y1=quantile(res$residuals,.25)
y2=quantile(res$residuals,.75)
m=(y2-y1)/(x2-x1)
b=y1-m*x1
quantiles=data.frame(emp_quantiles,teo_quantiles)
names(quantiles)=c('Empirical','Theoretical')
ggplot(quantiles,aes(x=Theoretical,y=Empirical))+
geom_point(col='black',size=2)+
geom_abline(intercept = b ,slope =m,col="red")+
labs(title='',x='Cuantiles Teóricos',y='Cuantiles Empíricos')+
theme_minimal()+
theme(axis.title =element_text(size=8))
# Pruebas de normalidad
lillie.test(res$residuals)
ad.test(res$residuals)
cvm.test(res$residuals)
# Varianza constante
ggplot(data=residuales,aes(x=x,y=y))+
geom_point()+
labs(x='Fitted values',y='Residuals')+
geom_hline(yintercept =0,col='red')+
theme_minimal()
ncvTest(res)
# No correlación
dwtest(res)
# Se ajusta un modelo polinomial de orden 3
res=lm(datosT$yt~poly(datosT$x,3,raw=F),datosT)
summary(res)
x = seq(min(datosT$x),max(datosT$x),by=.1)
y_hat=res$coefficients[1]+res$coefficients[2]*x+
res$coefficients[3]*x^2+res$coefficients[4]*x^3
ajuste=data.frame(x,y_hat)
p+geom_line(data=ajuste,aes(x=x,y=y_hat),col='red')
p
p
# Se ajusta un modelo polinomial de orden 3
res=lm(datosT$yt~poly(datosT$x,3,raw=T),datosT)
summary(res)
x = seq(min(datosT$x),max(datosT$x),by=.1)
y_hat=res$coefficients[1]+res$coefficients[2]*x+
res$coefficients[3]*x^2+res$coefficients[4]*x^3
ajuste=data.frame(x,y_hat)
p+geom_line(data=ajuste,aes(x=x,y=y_hat),col='red')
# Análisis de residuales
residuales = data.frame(x=res$fitted.values,y=res$residuals)
# histograma
ggplot(data=residuales,aes(x=y))+
geom_histogram(breaks=hist(res$residuals,plot=F)$breaks,col='black',
fill='skyblue2')+
labs(x='',y='')+
theme_minimal()
# qqplot
emp_quantiles=quantile(res$residuals,
probs=seq(0.01,.99,length.out = length(res$residuals)))
teo_quantiles=qnorm(seq(.025,.975,length.out = length(res$residuals)))
x1=qnorm(.25)
x2=qnorm(.75)
y1=quantile(res$residuals,.25)
y2=quantile(res$residuals,.75)
m=(y2-y1)/(x2-x1)
b=y1-m*x1
quantiles=data.frame(emp_quantiles,teo_quantiles)
names(quantiles)=c('Empirical','Theoretical')
ggplot(quantiles,aes(x=Theoretical,y=Empirical))+
geom_point(col='black',size=2)+
geom_abline(intercept = b ,slope =m,col="red")+
labs(title='',x='Cuantiles Teóricos',y='Cuantiles Empíricos')+
theme_minimal()+
theme(axis.title =element_text(size=8))
# Pruebas de normalidad
lillie.test(res$residuals)
ad.test(res$residuals)
cvm.test(res$residuals)
# Varianza constante
ggplot(data=residuales,aes(x=x,y=y))+
geom_point()+
labs(x='Fitted values',y='Residuals')+
geom_hline(yintercept =0,col='red')+
theme_minimal()
ncvTest(res)
# No correlación
dwtest(res)
# Respuesta media al 95%
MeanRespCI=predict(res,data.frame(datosT$x),interval="confidence",level=.95)
MeanRespCI=data.frame(MeanRespCI[,1],MeanRespCI[,2],MeanRespCI[,3],datosT$yt,datosT$x)
names(MeanRespCI)=c('Fit','Lower','Upper','yT','x')
ggplot(MeanRespCI,aes(x=x,y=yT))+
geom_point(col='black',size=1)+
geom_line(aes(x=SCT,y=Fit),col="red")+
geom_line(aes(x=SCT,y=Lower),col="blue",linetype='dashed')+
geom_line(aes(x=SCT,y=Upper),col="blue",linetype='dashed')+
labs(x='x',y='y',title='95% Confidence Intervals')+
theme_minimal()+
theme(plot.title=element_text(size=10),axis.title = element_text(size=8))
ggplot(MeanRespCI,aes(x=x,y=yT))+
geom_point(col='black',size=1)+
geom_line(aes(x=x,y=Fit),col="red")+
geom_line(aes(x=x,y=Lower),col="blue",linetype='dashed')+
geom_line(aes(x=x,y=Upper),col="blue",linetype='dashed')+
labs(x='x',y='y',title='95% Confidence Intervals')+
theme_minimal()+
theme(plot.title=element_text(size=10),axis.title = element_text(size=8))
# Respuesta media al 95%
MeanRespCI=predict(res,data.frame(datosT$x),interval="confidence",level=.95)
MeanRespCI=data.frame(MeanRespCI[,1],MeanRespCI[,2],MeanRespCI[,3],datosT$yt,datosT$x)
names(MeanRespCI)=c('Fit','Lower','Upper','y','x')
ggplot(MeanRespCI,aes(x=x,y=y))+
geom_point(col='black',size=1)+
geom_line(aes(x=x,y=Fit),col="red")+
geom_line(aes(x=x,y=Lower),col="blue",linetype='dashed')+
geom_line(aes(x=x,y=Upper),col="blue",linetype='dashed')+
labs(x='x',y='y',title='95% Confidence Intervals')+
theme_minimal()+
theme(plot.title=element_text(size=10),axis.title = element_text(size=8))
# Prediction Intervals 95%
MeanRespPred=predict(res,data.frame(datosT$x),interval="prediction",level=.95)
MeanRespPred=data.frame(MeanRespPred[,1],MeanRespPred[,2],MeanRespPred[,3],datosT$yt,datosT$x)
names(MeanRespPred)=c('Fit','Lower','Upper','y','x')
ggplot(MeanRespPred,aes(x=x,y=y))+
geom_point(col='black',size=1)+
geom_line(aes(x=x,y=Fit),col="red")+
geom_line(aes(x=x,y=Lower),col="blue",linetype='dashed')+
geom_line(aes(x=x,y=Upper),col="blue",linetype='dashed')+
labs(x='SCT',y='Transformed ACC',title='95% Prediction Intervals')+
theme_minimal()+
theme(plot.title=element_text(size=10),axis.title = element_text(size=8))
ggplot(MeanRespPred,aes(x=x,y=y))+
geom_point(col='black',size=1)+
geom_line(aes(x=x,y=Fit),col="red")+
geom_line(aes(x=x,y=Lower),col="blue",linetype='dashed')+
geom_line(aes(x=x,y=Upper),col="blue",linetype='dashed')+
labs(x='SCT',y='Transformed y',title='95% Prediction Intervals')+
theme_minimal()+
theme(plot.title=element_text(size=10),axis.title = element_text(size=8))
# Prediction Intervals 95%
MeanRespPred=predict(res,data.frame(datosT$x),interval="prediction",level=.95)
MeanRespPred=data.frame(MeanRespPred[,1],MeanRespPred[,2],MeanRespPred[,3],datosT$yt,datosT$x)
names(MeanRespPred)=c('Fit','Lower','Upper','y','x')
ggplot(MeanRespPred,aes(x=x,y=y))+
geom_point(col='black',size=1)+
geom_line(aes(x=x,y=Fit),col="red")+
geom_line(aes(x=x,y=Lower),col="blue",linetype='dashed')+
geom_line(aes(x=x,y=Upper),col="blue",linetype='dashed')+
labs(x='SCT',y='Transformed y',title='95% Prediction Intervals')+
theme_minimal()+
theme(plot.title=element_text(size=10),axis.title = element_text(size=8))
# Mean Response and Confidence Intervals on Original Data
MeanRespOriginalCI=(MeanRespCI*lambda+1)^(1/lambda)
MeanRespOriginalCI=data.frame(MeanRespOriginalCI[,1],MeanRespOriginalCI[,2],MeanRespOriginalCI[,3],datos$y,datos$x)
names(MeanRespOriginalCI)=c('Fit','Lower','Upper','y','x')
ggplot(MeanRespOriginalCI,aes(x=x,y=y))+
geom_point(col='black',size=1)+
geom_line(aes(x=x,y=Fit),col="red")+
geom_line(aes(x=x,y=Lower),col="blue",linetype='dashed')+
geom_line(aes(x=x,y=Upper),col="blue",linetype='dashed')+
labs(x='x',y='y',title='')+
theme_minimal()+
theme(plot.title=element_text(size=10),axis.title = element_text(size=8))
# Mean Response and Prediction Intervals on Original Data
MeanRespOriginalPred=(MeanRespPred*lambda+1)^(1/lambda)
MeanRespOriginalPred=data.frame(MeanRespOriginalPred[,1],MeanRespOriginalPred[,2],MeanRespOriginalPred[,3],datos$y,datos$x)
names(MeanRespOriginalPred)=c('Fit','Lower','Upper','y','x')
ggplot(MeanRespOriginalPred,aes(x=x,y=y))+
geom_point(col='black',size=1)+
geom_line(aes(x=x,y=Fit),col="red")+
geom_line(aes(x=x,y=Lower),col="blue",linetype='dashed')+
geom_line(aes(x=x,y=Upper),col="blue",linetype='dashed')+
labs(x='SCT',y='ACC',title='95% Prediction Intervals')+
theme_minimal()+
theme(plot.title=element_text(size=10),axis.title = element_text(size=8))
# Mean Response and Confidence Intervals on Original Data
MeanRespOriginalCI=(MeanRespCI*lambda+1)^(1/lambda)
MeanRespOriginalCI=data.frame(MeanRespOriginalCI[,1],MeanRespOriginalCI[,2],MeanRespOriginalCI[,3],datos$y,datos$x)
names(MeanRespOriginalCI)=c('Fit','Lower','Upper','y','x')
ggplot(MeanRespOriginalCI,aes(x=x,y=y))+
geom_point(col='black',size=1)+
geom_line(aes(x=x,y=Fit),col="red")+
geom_line(aes(x=x,y=Lower),col="blue",linetype='dashed')+
geom_line(aes(x=x,y=Upper),col="blue",linetype='dashed')+
labs(x='x',y='y',title='')+
theme_minimal()+
theme(plot.title=element_text(size=10),axis.title = element_text(size=8))
##########################################################################
# Ejemplo de análisis de residuales
datos=read.table(here('Datos/datos.txt'),header = F)
names(datos)=c('y','x')
# Se grafican los datos
p=ggplot(data=datos,aes(x=x,y=y))+
geom_point()+
theme_minimal()
p
# Se ajusta el modelo básico
res=lm(y~x,datos)
summary(res)
x = seq(min(datos$x),max(datos$x),by=.1)
y_hat=res$coefficients[1]+res$coefficients[2]*x
ajuste=data.frame(x,y_hat)
p+geom_line(data=ajuste,aes(x=x,y=y_hat),col='red')
# Análisis de residuales
residuales = data.frame(x=res$fitted.values,y=res$residuals)
# histograma
ggplot(data=residuales,aes(x=y))+
geom_histogram(breaks=hist(res$residuals,plot=F)$breaks,col='black',
fill='skyblue2')+
labs(x='',y='')+
theme_minimal()
# qqplot
emp_quantiles=quantile(res$residuals,
probs=seq(0.01,.99,length.out = length(res$residuals)))
teo_quantiles=qnorm(seq(.025,.975,length.out = length(res$residuals)))
x1=qnorm(.25)
x2=qnorm(.75)
y1=quantile(res$residuals,.25)
y2=quantile(res$residuals,.75)
m=(y2-y1)/(x2-x1)
b=y1-m*x1
quantiles=data.frame(emp_quantiles,teo_quantiles)
names(quantiles)=c('Empirical','Theoretical')
ggplot(quantiles,aes(x=Theoretical,y=Empirical))+
geom_point(col='black',size=2)+
geom_abline(intercept = b ,slope =m,col="red")+
labs(title='',x='Cuantiles Teóricos',y='Cuantiles Empíricos')+
theme_minimal()+
theme(axis.title =element_text(size=8))
# Pruebas de normalidad
lillie.test(res$residuals)
ad.test(res$residuals)
cvm.test(res$residuals)
# Varianza constante
ggplot(data=residuales,aes(x=x,y=y))+
geom_point()+
labs(x='Fitted values',y='Residuals')+
geom_hline(yintercept =0,col='red')+
theme_minimal()
ncvTest(res)
# No correlación
dwtest(res)
# Transformar los datos con Box Cox
bc = boxcox(datos$y ~ datos$x)
lambda = bc$x[which.max(bc$y)];lambda
yT=((datos$y^lambda)-1)/lambda
datosT=data.frame(datos$x,yT)
datosT=data.frame(datos$x,yT)
names(datosT)=c('x','y')
# TransACC against SCT
p=ggplot(datosT,aes(x=x,y=yt))+
geom_point(col='black',size=1)+
labs(x='x',y='y')+
theme_minimal()
p
# TransACC against SCT
p=ggplot(datosT,aes(x=x,y=y))+
geom_point(col='black',size=1)+
labs(x='x',y='y')+
theme_minimal()
p
# TransACC against SCT
p=ggplot(datosT,aes(x=x,y=y))+
geom_point(col='black',size=1)+
labs(x='x',y='Transformed y')+
theme_minimal()
p
# Se ajusta el modelo básico
res=lm(y~x,datosT)
summary(res)
x = seq(min(datosT$x),max(datosT$x),by=.1)
y_hat=res$coefficients[1]+res$coefficients[2]*x
ajuste=data.frame(x,y_hat)
p+geom_line(data=ajuste,aes(x=x,y=y_hat),col='red')
# Análisis de residuales
residuales = data.frame(x=res$fitted.values,y=res$residuals)
# histograma
ggplot(data=residuales,aes(x=y))+
geom_histogram(breaks=hist(res$residuals,plot=F)$breaks,col='black',
fill='skyblue2')+
labs(x='',y='')+
theme_minimal()
# qqplot
emp_quantiles=quantile(res$residuals,
probs=seq(0.01,.99,length.out = length(res$residuals)))
teo_quantiles=qnorm(seq(.025,.975,length.out = length(res$residuals)))
x1=qnorm(.25)
x2=qnorm(.75)
y1=quantile(res$residuals,.25)
y2=quantile(res$residuals,.75)
m=(y2-y1)/(x2-x1)
b=y1-m*x1
quantiles=data.frame(emp_quantiles,teo_quantiles)
names(quantiles)=c('Empirical','Theoretical')
ggplot(quantiles,aes(x=Theoretical,y=Empirical))+
geom_point(col='black',size=2)+
geom_abline(intercept = b ,slope =m,col="red")+
labs(title='',x='Cuantiles Teóricos',y='Cuantiles Empíricos')+
theme_minimal()+
theme(axis.title =element_text(size=8))
# Pruebas de normalidad
lillie.test(res$residuals)
ad.test(res$residuals)
cvm.test(res$residuals)
# Varianza constante
ggplot(data=residuales,aes(x=x,y=y))+
geom_point()+
labs(x='Fitted values',y='Residuals')+
geom_hline(yintercept =0,col='red')+
theme_minimal()
ncvTest(res)
# No correlación
dwtest(res)
# Se ajusta un modelo polinomial de orden 3
res=lm(datosT$yt~poly(datosT$x,3,raw=T),datosT)
# Se ajusta un modelo polinomial de orden 3
res=lm(datosT$y~poly(datosT$x,3,raw=T),datosT)
summary(res)
x = seq(min(datosT$x),max(datosT$x),by=.1)
y_hat=res$coefficients[1]+res$coefficients[2]*x+
res$coefficients[3]*x^2+res$coefficients[4]*x^3
ajuste=data.frame(x,y_hat)
p+geom_line(data=ajuste,aes(x=x,y=y_hat),col='red')
# Análisis de residuales
residuales = data.frame(x=res$fitted.values,y=res$residuals)
# histograma
ggplot(data=residuales,aes(x=y))+
geom_histogram(breaks=hist(res$residuals,plot=F)$breaks,col='black',
fill='skyblue2')+
labs(x='',y='')+
theme_minimal()
# qqplot
emp_quantiles=quantile(res$residuals,
probs=seq(0.01,.99,length.out = length(res$residuals)))
teo_quantiles=qnorm(seq(.025,.975,length.out = length(res$residuals)))
x1=qnorm(.25)
x2=qnorm(.75)
y1=quantile(res$residuals,.25)
y2=quantile(res$residuals,.75)
m=(y2-y1)/(x2-x1)
b=y1-m*x1
quantiles=data.frame(emp_quantiles,teo_quantiles)
names(quantiles)=c('Empirical','Theoretical')
ggplot(quantiles,aes(x=Theoretical,y=Empirical))+
geom_point(col='black',size=2)+
geom_abline(intercept = b ,slope =m,col="red")+
labs(title='',x='Cuantiles Teóricos',y='Cuantiles Empíricos')+
theme_minimal()+
theme(axis.title =element_text(size=8))
# Pruebas de normalidad
lillie.test(res$residuals)
ad.test(res$residuals)
cvm.test(res$residuals)
# Varianza constante
ggplot(data=residuales,aes(x=x,y=y))+
geom_point()+
labs(x='Fitted values',y='Residuals')+
geom_hline(yintercept =0,col='red')+
theme_minimal()
ncvTest(res)
# No correlación
dwtest(res)
# Respuesta media al 95%
MeanRespCI=predict(res,data.frame(datosT$x),interval="confidence",level=.95)
MeanRespCI=data.frame(MeanRespCI[,1],MeanRespCI[,2],MeanRespCI[,3],datosT$yt,datosT$x)
MeanRespCI=data.frame(MeanRespCI[,1],MeanRespCI[,2],MeanRespCI[,3],datosT$y,datosT$x)
names(MeanRespCI)=c('Fit','Lower','Upper','y','x')
ggplot(MeanRespCI,aes(x=x,y=y))+
geom_point(col='black',size=1)+
geom_line(aes(x=x,y=Fit),col="red")+
geom_line(aes(x=x,y=Lower),col="blue",linetype='dashed')+
geom_line(aes(x=x,y=Upper),col="blue",linetype='dashed')+
labs(x='x',y='Transformed y',title='95% Confidence Intervals')+
theme_minimal()+
theme(plot.title=element_text(size=10),axis.title = element_text(size=8))
# Prediction Intervals 95%
MeanRespPred=predict(res,data.frame(datosT$x),interval="prediction",level=.95)
MeanRespPred=data.frame(MeanRespPred[,1],MeanRespPred[,2],MeanRespPred[,3],datosT$yt,datosT$x)
names(MeanRespPred)=c('Fit','Lower','Upper','y','x')
MeanRespPred=data.frame(MeanRespPred[,1],MeanRespPred[,2],MeanRespPred[,3],datosT$y,datosT$x)
# Prediction Intervals 95%
MeanRespPred=predict(res,data.frame(datosT$x),interval="prediction",level=.95)
MeanRespPred=data.frame(MeanRespPred[,1],MeanRespPred[,2],MeanRespPred[,3],datosT$y,datosT$x)
names(MeanRespPred)=c('Fit','Lower','Upper','y','x')
ggplot(MeanRespPred,aes(x=x,y=y))+
geom_point(col='black',size=1)+
geom_line(aes(x=x,y=Fit),col="red")+
geom_line(aes(x=x,y=Lower),col="blue",linetype='dashed')+
geom_line(aes(x=x,y=Upper),col="blue",linetype='dashed')+
labs(x='SCT',y='Transformed y',title='95% Prediction Intervals')+
theme_minimal()+
theme(plot.title=element_text(size=10),axis.title = element_text(size=8))
# Mean Response and Confidence Intervals on Original Data
MeanRespOriginalCI=(MeanRespCI*lambda+1)^(1/lambda)
MeanRespOriginalCI=data.frame(MeanRespOriginalCI[,1],MeanRespOriginalCI[,2],MeanRespOriginalCI[,3],datos$y,datos$x)
names(MeanRespOriginalCI)=c('Fit','Lower','Upper','y','x')
ggplot(MeanRespOriginalCI,aes(x=x,y=y))+
geom_point(col='black',size=1)+
geom_line(aes(x=x,y=Fit),col="red")+
geom_line(aes(x=x,y=Lower),col="blue",linetype='dashed')+
geom_line(aes(x=x,y=Upper),col="blue",linetype='dashed')+
labs(x='x',y='y',title='')+
theme_minimal()+
theme(plot.title=element_text(size=10),axis.title = element_text(size=8))
# Mean Response and Prediction Intervals on Original Data
MeanRespOriginalPred=(MeanRespPred*lambda+1)^(1/lambda)
MeanRespOriginalPred=data.frame(MeanRespOriginalPred[,1],MeanRespOriginalPred[,2],MeanRespOriginalPred[,3],datos$y,datos$x)
names(MeanRespOriginalPred)=c('Fit','Lower','Upper','y','x')
ggplot(MeanRespOriginalPred,aes(x=x,y=y))+
geom_point(col='black',size=1)+
geom_line(aes(x=x,y=Fit),col="red")+
geom_line(aes(x=x,y=Lower),col="blue",linetype='dashed')+
geom_line(aes(x=x,y=Upper),col="blue",linetype='dashed')+
labs(x='SCT',y='ACC',title='95% Prediction Intervals')+
theme_minimal()+
theme(plot.title=element_text(size=10),axis.title = element_text(size=8))
MeanRespPred=data.frame(MeanRespPred[,1],MeanRespPred[,2],MeanRespPred[,3],datosT$y,datosT$x)
names(MeanRespPred)=c('Fit','Lower','Upper','y','x')
ggplot(MeanRespPred,aes(x=x,y=y))+
geom_point(col='black',size=1)+
geom_line(aes(x=x,y=Fit),col="red")+
geom_line(aes(x=x,y=Lower),col="blue",linetype='dashed')+
geom_line(aes(x=x,y=Upper),col="blue",linetype='dashed')+
labs(x='SCT',y='Transformed y',title='95% Prediction Intervals')+
theme_minimal()+
theme(plot.title=element_text(size=10),axis.title = element_text(size=8))
# Mean Response and Confidence Intervals on Original Data
MeanRespOriginalCI=(MeanRespCI*lambda+1)^(1/lambda)
MeanRespOriginalCI=data.frame(MeanRespOriginalCI[,1],MeanRespOriginalCI[,2],MeanRespOriginalCI[,3],datos$y,datos$x)
names(MeanRespOriginalCI)=c('Fit','Lower','Upper','y','x')
ggplot(MeanRespOriginalCI,aes(x=x,y=y))+
geom_point(col='black',size=1)+
geom_line(aes(x=x,y=Fit),col="red")+
geom_line(aes(x=x,y=Lower),col="blue",linetype='dashed')+
geom_line(aes(x=x,y=Upper),col="blue",linetype='dashed')+
labs(x='x',y='y',title='')+
theme_minimal()+
theme(plot.title=element_text(size=10),axis.title = element_text(size=8))
# Mean Response and Prediction Intervals on Original Data
MeanRespOriginalPred=(MeanRespPred*lambda+1)^(1/lambda)
MeanRespOriginalPred=data.frame(MeanRespOriginalPred[,1],MeanRespOriginalPred[,2],MeanRespOriginalPred[,3],datos$y,datos$x)
names(MeanRespOriginalPred)=c('Fit','Lower','Upper','y','x')
ggplot(MeanRespOriginalPred,aes(x=x,y=y))+
geom_point(col='black',size=1)+
geom_line(aes(x=x,y=Fit),col="red")+
geom_line(aes(x=x,y=Lower),col="blue",linetype='dashed')+
geom_line(aes(x=x,y=Upper),col="blue",linetype='dashed')+
labs(x='SCT',y='ACC',title='95% Prediction Intervals')+
theme_minimal()+
theme(plot.title=element_text(size=10),axis.title = element_text(size=8))
ggplot(MeanRespOriginalPred,aes(x=x,y=y))+
geom_point(col='black',size=1)+
geom_line(aes(x=x,y=Fit),col="red")+
geom_line(aes(x=x,y=Lower),col="blue",linetype='dashed')+
geom_line(aes(x=x,y=Upper),col="blue",linetype='dashed')+
labs(x='SCT',y='ACC',title='95% Prediction Intervals')+
theme_minimal()+
theme(plot.title=element_text(size=10),axis.title = element_text(size=8))
